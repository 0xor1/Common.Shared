$min_size: 0;
$max_size: 5;
$sub_sufs: '', 'q', 'h', 't';
$sub_divs: '', '.25', '.5', '.75';

@mixin genVars($var_prefix: r, $units: em, $min_size: $min_size, $max_size: $max_size, $step_size: 1, $sub_sufs: $sub_sufs, $sub_divs: $sub_divs) {
    @for $i from $min_size through $max_size {
        @if $i % $step_size == 0 {
            @for $j from 1 through length($sub_sufs) {
                --#{$var_prefix}-#{$i}#{nth($sub_sufs, $j)}: #{$i}#{nth($sub_divs, $j)}#{$units};
            }
        }
    }
}

@mixin genProps($class, $props, $amp: false, $val_pre: r, $min_size: $min_size, $max_size: $max_size, $step_size: 1, $sub_sufs: $sub_sufs) {
    @for $i from $min_size through $max_size {
        @if $i % $step_size == 0 {
            @each $sub_suf in  $sub_sufs {
                #{if($amp, "&", "")}.#{$class}-#{$i}#{$sub_suf} {
                    @each $prop in $props {
                        #{$prop}: var(--#{$val_pre}-#{$i}#{$sub_suf});
                    }
                }
            }
        }
    }
}

@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;800&display=swap');

* {
    box-sizing: border-box;
}

html, body, .fill {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    font-family: 'Open Sans', sans-serif;
}

textarea{
    font-family: 'Open Sans', sans-serif;
}

.root{
    @include genVars(a, rem);
    @include genVars(r, em);
    @include genVars(px, px);
    @include genVars(r, em, $min_size: 10, $max_size: 50, $step_size: 5, $sub_sufs: [""]);
    @include genProps(f, font-size, false, a);
    @include genProps(br, border-radius);
    @include genProps(bw, border-width, false, px);
    @include genProps(w, width);
    @include genProps(w, width, $min_size: 10, $max_size: 50, $step_size: 5, $sub_sufs: [""]);
    @include genProps(h, height);
    @include genProps(sq, (width, height));
    @include genProps(m, margin);
    @include genProps(m-x, (margin-left, margin-right));
    @include genProps(m-y, (margin-top, margin-bottom));
    @include genProps(m-t, margin-top);
    @include genProps(m-r, margin-right);
    @include genProps(m-b, margin-bottom);
    @include genProps(m-l, margin-left);
    @include genProps(p, padding);
    @include genProps(p-x, (padding-left, padding-right));
    @include genProps(p-y, (padding-top, padding-bottom));
    @include genProps(p-t, padding-top);
    @include genProps(p-r, padding-right);
    @include genProps(p-b, padding-bottom);
    @include genProps(p-l, padding-left);
    @extend .fill;
    .f-n{
        font-weight: 400;
    }
    .f-b {
        font-weight: 800;
    }
    .mw-0p{
        max-width: 0;
    }
    .mw-10p{
        max-width: 10%;
    }
    .mw-20p{
        max-width: 20%;
    }
    .mw-30p{
        max-width: 30%;
    }
    .mw-40p{
        max-width: 40%;
    }
    .mw-50p{
        max-width: 50%;
    }
    .mw-60p{
        max-width: 60%;
    }
    .mw-70p{
        max-width: 70%;
    }
    .mw-80p{
        max-width: 80%;
    }
    .mw-90p{
        max-width: 90%;
    }
    .mw-100p{
        max-width: 100%;
    }
    .w-0p{
        width: 0;
    }
    .w-10p{
        width: 10%;
    }
    .w-20p{
        width: 20%;
    }
    .w-30p{
        width: 30%;
    }
    .w-40p{
        width: 40%;
    }
    .w-50p{
        width: 50%;
    }
    .w-60p{
        width: 60%;
    }
    .w-70p{
        width: 70%;
    }
    .w-80p{
        width: 80%;
    }
    .w-90p{
        width: 90%;
    }
    .w-100p{
        width: 100%;
    }
    .mh-0p{
        max-height: 0;
    }
    .mh-10p{
        max-height: 10%;
    }
    .mh-20p{
        max-height: 20%;
    }
    .mh-30p{
        max-height: 30%;
    }
    .mh-40p{
        max-height: 40%;
    }
    .mh-50p{
        max-height: 50%;
    }
    .mh-60p{
        max-height: 60%;
    }
    .mh-70p{
        max-height: 70%;
    }
    .mh-80p{
        max-height: 80%;
    }
    .mh-90p{
        max-height: 90%;
    }
    .mh-100p{
        max-height: 100%;
    }
    .h-0p{
        height: 0;
    }
    .h-10p{
        height: 10%;
    }
    .h-20p{
        height: 20%;
    }
    .h-30p{
        height: 30%;
    }
    .h-40p{
        height: 40%;
    }
    .h-50p{
        height: 50%;
    }
    .h-60p{
        height: 60%;
    }
    .h-70p{
        height: 70%;
    }
    .h-80p{
        height: 80%;
    }
    .h-90p{
        height: 90%;
    }
    .h-100p{
        height: 100%;
    }
    .p-rel{
        position: relative;
    }
    .p-abs{
        position: absolute;
    }
}

img{
    &.res-q {
        width: 25%;
        height: auto;
    }
    &.res-h {
        width: 50%;
        height: auto;
    }
    &.res-t {
        width: 75%;
        height: auto;
    }
    &.res-f {
        width: 100%;
        height: auto;
    }
}

.txt-j{
    text-align: justify;
}
.txt-c{
    text-align: center;
}

.txt-dec-none{
    text-decoration: none;
}

.ov-v{
    overflow: visible;
}

.ov-a{
    overflow: auto;
}

.d-none{
    display: none;
}

.bs-solid{
    border-style: solid;
}

.ellip{
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

tr:not(:hover){
    .show-on-row-mouse-over{
        display: none;
    }
}

// flex rules
.root, .flx {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    &.i{
        display: inline-flex;
    }
    &.row{
        flex-direction: row;
        &.rev{
            flex-direction: row-reverse;
        }
    }
    &.col{
        flex-direction: column;
        &.rev{
            flex-direction: column-reverse;
        }
    }
    &.rap{
        flex-wrap: wrap;
    }
    &.child-no-shrink > *{
        flex-shrink: 0;
    }
    &.jc-s{
        justify-content: flex-start;
    }
    &.jc-e{
        justify-content: flex-end;
    }
    &.jc-c{
        justify-content: center;
    }
    &.jc-sb{
        justify-content: space-between;
    }
    &.jc-sa{
        justify-content: space-around;
    }
    &.jc-se{
        justify-content: space-evenly;
    }
    &.jc-stretch{
        justify-content: stretch;
        > * {
            flex-grow: 1;
        }
    }
    &.ai-s{
        align-items: flex-start;
    }
    &.ai-e{
        align-items: flex-end;
    }
    &.ai-c{
        align-items: center;
    }
    &.ai-b{
        align-items: baseline;
    }
    &.ai-stretch{
        align-items: stretch;
    }
    &.ac-s{
        align-content: flex-start;
    }
    &.ac-e{
        align-content: flex-end;
    }
    &.ac-c{
        align-content: center;
    }
    &.ac-sb{
        align-content: space-between;
    }
    &.ac-sa{
        align-content: space-around;
    }
    &.ac-se{
        align-content: space-evenly;
    }
    &.ac-stretch{
        align-content: stretch;
    }
    @include genProps(g, gap, true);
    @include genProps(g-r, row-gap, true);
    @include genProps(g-c, column-gap, true);
    > {
        .grow-0 {
            flex-grow: 0;
        }
        .grow-1 {
            flex-grow: 1;
        }
        .grow-2 {
            flex-grow: 2;
        }
        .grow-3 {
            flex-grow: 3;
        }
        .grow-4 {
            flex-grow: 4;
        }
        .grow-5 {
            flex-grow: 5;
        }
        .shrink-0 {
            flex-shrink: 0;
        }
        .shrink-1 {
            flex-shrink: 1;
        }
        .shrink-2 {
            flex-shrink: 2;
        }
        .shrink-3 {
            flex-shrink: 3;
        }
        .shrink-4 {
            flex-shrink: 4;
        }
        .shrink-5 {
            flex-shrink: 5;
        }
    }
}

.ptr{
    cursor: pointer;
}

/* RADZEN STYLING OVERRIDES */

/* custom input styling for invalid red highlighting on all inputs by default */
input.invalid:not(:disabled):not(.rz-state-disabled) {
    box-shadow: inset 0 0 0 1px var(--rz-danger);
    border: var(--rz-border-danger);
    &:focus, &:hover {
        box-shadow: inset 0 0 0 2px var(--rz-danger);
        border: var(--rz-border-danger);
    }
}

.rz-message-popup {
    position: relative;
    transform: translateY(var(--r-0h));
    border: var(--rz-border-danger);
    &.rz-messages-error{
        color: var(--rz-notification-error-color);
        background-color: var(--rz-notification-error-background-color);
    }
}

// hide profile menu dropdown arrow icon
div.rz-header > ul.rz-profile-menu > li.rz-navigation-item > div.rz-navigation-item-wrapper > div.rz-navigation-item-link > i.rz-navigation-item-icon-children {
    display: none;
}

// allow making table row cursor a pointer
.row-clickable{
    tbody {
        tr:not(.task-row) {
            cursor: pointer;
        }
    }
}

// I dont include 500 weight font so override to 600
.rz-grid-table thead th .rz-column-title{
    font-weight: 600;
}

// data grid doesnt shrink with parent container without this
.rz-data-grid{
    max-width: 100%;
}


// dialog header looks bad without this
.rz-dialog-titlebar {
    padding-bottom: 0.75em;
    padding-top: 0.75em;
    border-bottom: 1px solid gray;
}

// remove x padding from tab view
.rz-tabview.no-x-pad .rz-tabview-panels .rz-tabview-panel{
    padding-left: 0;
    padding-right: 0;
}